version: '3'

volumes:
  pgdata: {}

services:
  ohana1:
    build:
      context: ..
      dockerfile: .dev/ohana.Dockerfile
      args:
        MY_UID: ${MY_UID}
        MY_GID: ${MY_GID}
    network_mode: host
    environment:
      GIN_PORT: 9001
      APP_PORT: 8001
    volumes:
    - ../:/home/user/app
    - ./ohana1.config.yaml:/config.yaml:ro

  ohana2:
    build:
      context: ..
      dockerfile: .dev/ohana.Dockerfile
      args:
        MY_UID: ${MY_UID}
        MY_GID: ${MY_GID}
    network_mode: host
    environment:
      GIN_PORT: 9002
      APP_PORT: 8002
    volumes:
    - ../:/home/user/app
    - ./ohana2.config.yaml:/config.yaml:ro

  web:
    build:
      context: ..
      dockerfile: .dev/web.Dockerfile
      args:
        MY_UID: ${MY_UID}
        MY_GID: ${MY_GID}
    user: ${MY_UID}:${MY_GID}
    network_mode: host
    volumes:
    - ../:/home/user/app

  nginx:
    image: nginx
    network_mode: host
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf

  postgres:
    image: postgres:14.2
    ports:
    - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: ohanaAdmin
      POSTGRES_PASSWORD: ohanaMeansFamily
      POSTGRES_DB: ohana
    volumes:
    - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
    - "127.0.0.1:6379:6379"
    command: --requirepass ohanaMeansFamily

  oidc-server-mock:
    container_name: ohana-idp
    image: ghcr.io/soluto/oidc-server-mock:latest
    ports:
    - "127.0.0.1:8080:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SERVER_OPTIONS_INLINE: |
        {
          "AccessTokenJwtType": "JWT",
          "Discovery": {
            "ShowKeySet": true
          },
          "Authentication": {
            "CookieSameSiteMode": "Lax",
            "CheckSessionCookieSameSiteMode": "Lax"
          }
        }
      ACCOUNT_OPTIONS_INLINE: |
        {
          "AutomaticRedirectAfterSignOut": true
        }
      USERS_CONFIGURATION_INLINE: |
        [
          {
            "SubjectId":"1",
            "Username":"admin",
            "Password":"password",
            "Claims": [
              {
                "Type": "name",
                "Value": "Ohana"
              },
              {
                "Type": "email",
                "Value": "admin@ohanais.live"
              },
              {
                "Type": "roles",
                "Value": "[\"admin\", \"some_role\"]",
                "ValueType": "json"
              }
            ]
          },
          {
            "SubjectId":"2",
            "Username":"user",
            "Password":"password",
            "Claims": [
              {
                "Type": "name",
                "Value": "John Doe"
              },
              {
                "Type": "email",
                "Value": "john@ohanais.live"
              },
              {
                "Type": "roles",
                "Value": "[\"test123\"]",
                "ValueType": "json"
              }
            ]
          }
        ]
      IDENTITY_RESOURCES_INLINE: |
        [{
          "Name": "app.roles",
          "ClaimTypes": ["roles"]
        }]
      CLIENTS_CONFIGURATION_INLINE: |
        [{
            "ClientId": "ohana",
            "ClientSecrets": [
                "family"
            ],
            "Description": "Sample client",
            "AllowedGrantTypes": [
                "authorization_code"
            ],
            "RequirePkce": false,
            "AlwaysIncludeUserClaimsInIdToken": true,
            "RedirectUris": [
                "http://localhost:8000/auth/callback"
            ],
            "AllowedScopes": [
                "openid",
                "profile",
                "email",
                "app.roles"
            ],
            "ClientClaimsPrefix": "",
            "Claims": []

        }]
