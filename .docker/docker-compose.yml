version: "3.1"

services:
  _ohana_build:
    image: ohana
    build:
      context: ..
      dockerfile: .docker/Dockerfile
    command: ['/app/ohana', '--gen-ca', '--gen-certs', '-hosts', 'certhosts.yaml']
    volumes:
      - ohanaCerts:/app/certificates
      - ./certhosts.yaml:/app/certhosts.yaml

  ohana1:
    image: ohana
    depends_on:
      - _ohana_build
      - postgres
      - redis
    networks:
      - backend
    volumes:
      - ohanaCerts:/app/certificates:ro
      - ./config.1.yaml:/app/config.yaml:ro
      - ../shards/ohana1:/app/shards

  ohana2:
    image: ohana
    depends_on:
      - _ohana_build
      - postgres
      - redis
    networks:
      - backend
    volumes:
      - ohanaCerts:/app/certificates:ro
      - ./config.2.yaml:/app/config.yaml:ro
      - ../shards/ohana2:/app/shards

  nginx:
    image: nginx
    networks:
      - backend
    depends_on:
      - ohana1
      - ohana2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8000:8000

  postgres:
    image: postgres:14.2
    restart: unless-stopped
    volumes:
      - "postDB:/var/lib/postgresql/data"
    environment:
      - POSTGRES_PASSWORD=ohanaMeansFamily
      - POSTGRES_USER=ohanaAdmin
      - POSTGRES_DB=ohana
    networks:
      - backend

  redis:
    image: redis
    restart: unless-stopped
    networks:
      - backend
    command: redis-server --requirepass ohanaMeansFamily

volumes:
  postDB:
  ohanaCerts:

networks:
  backend:
